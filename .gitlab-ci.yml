stages:
  - determine
  - build
  - tag
  - push

variables:
  IMAGE_NAME: "amoljorewar/shift-roster-app"
  DOCKER_TLS_CERTDIR: ""  # Disable TLS for Docker-in-Docker
  DOCKER_HOST: "tcp://docker:2375"

services:
  - docker:dind  # Enable Docker-in-Docker for building and pushing images

before_script:
  # Ensure jq is installed (shared runners may not have it pre-installed)
  - apt-get update && apt-get install -y jq || echo "jq is already installed"

determine_tags:
  stage: determine
  script:
    - >
      LATEST_TAG=$(curl -s -u "$DOCKER_HUB_USERNAME:$DOCKER_HUB_PASSWORD" https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/?page_size=1 | jq -r '.results[0].name')
    #- echo "Latest tag found: " ${LATEST_TAG}
    - >
      if [[ $LATEST_TAG =~ ^v([0-9]+)\.([0-9]+)$ ]]; then
        MAJOR=${BASH_REMATCH[1]}
        MINOR=${BASH_REMATCH[2]}
        NEW_TAG="v$MAJOR.$((MINOR + 1))"
      else
        echo "No valid tag found, defaulting to v1.0"
        NEW_TAG="v1.0"
      fi
    #- echo "New tag for previous image: $NEW_TAG"
    - echo $LATEST_TAG > .previous_tag
    - echo $NEW_TAG > .new_versioned_tag
    - echo "latest" > .latest_tag

build_image:
  stage: build
  script:
    - LATEST_TAG=$(cat .latest_tag)
    #- echo "Building Docker image with tag: $IMAGE_NAME:$LATEST_TAG"
    - docker build -t $IMAGE_NAME:$LATEST_TAG .

tag_previous_image:
  stage: tag
  script:
    - PREVIOUS_TAG=$(cat .previous_tag)
    - NEW_VERSIONED_TAG=$(cat .new_versioned_tag)
    - >
      if [[ -n "$PREVIOUS_TAG" && "$PREVIOUS_TAG" != "null" ]]; then
        echo "Re-tagging $IMAGE_NAME:$PREVIOUS_TAG to $IMAGE_NAME:$NEW_VERSIONED_TAG"
        docker pull $IMAGE_NAME:$PREVIOUS_TAG
        docker tag $IMAGE_NAME:$PREVIOUS_TAG $IMAGE_NAME:$NEW_VERSIONED_TAG
      else
        echo "No valid previous tag found, skipping re-tagging."
      fi

push_images:
  stage: push
  script:
    - LATEST_TAG=$(cat .latest_tag)
    - NEW_VERSIONED_TAG=$(cat .new_versioned_tag)
    #- echo "Pushing image with tag: $IMAGE_NAME:$LATEST_TAG"
    - docker push $IMAGE_NAME:$LATEST_TAG
    - >
      if [[ -n "$NEW_VERSIONED_TAG" ]]; then
        echo "Pushing versioned tag: $IMAGE_NAME:$NEW_VERSIONED_TAG"
        docker push $IMAGE_NAME:$NEW_VERSIONED_TAG
      fi
